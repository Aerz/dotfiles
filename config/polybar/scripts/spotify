#!/bin/bash
# ---
#
# Spotify and media status module script.
#
# Source:
#   - https://github.com/PrayagS/polybar-spotify
#
# Dependencies:
#   - zscroll   (https://github.com/noctuid/zscroll)
#   - playerctl (https://github.com/altdesktop/playerctl)
#   - polybar   (https://github.com/polybar/polybar)
#
# ---

# The name of polybar bar which houses the main spotify module and the control modules.
readonly PARENT_BAR="monitor1"
readonly PARENT_BAR_PID=$(pgrep -a "polybar" | grep "$PARENT_BAR" | cut -d" " -f1)

# Set the source audio player here.
# Players supporting the MPRIS spec are supported.
# Examples: spotify, vlc, chrome, mpv and others.
# Use `playerctld` to always detect the latest player.
# See more here: https://github.com/altdesktop/playerctl/#selecting-players-to-control
PLAYER="spotify"

# Format of the information displayed
# Eg. {{ artist }} - {{ album }} - {{ title }}
# See more attributes here: https://github.com/altdesktop/playerctl/#printing-properties-and-metadata
FORMAT="{{ title }} - {{ artist }}"

readonly OPT="$1"

PLAYERCTL_STATUS=$(playerctl --player=$PLAYER status 2>/dev/null)
EXIT_CODE=$?

[ $EXIT_CODE -eq 0 ] && STATUS=$PLAYERCTL_STATUS || STATUS="Empty"

# Sends $2 as message to all polybar PIDs that are part of $1
update_hooks() {
    while IFS= read -r id
    do
        polybar-msg -p "$id" hook media-play-pause $2 1>/dev/null 2>&1
    done < <(echo "$1")
}

scroll_media_status() {
    # see man zscroll for documentation of the following parameters
    zscroll \
        --length 28 \
        --delay 0.8 \
        --scroll-padding "   ï¢† " \
        --match-command "$0 --status" \
        --match-text "Playing" "--scroll 1" \
        --match-text "Paused" "--scroll 0" \
        --update-check true "$0" &

    wait
}

handle_playerctl_status() {
    local status="$1"

    case $status in
        Stopped)
            echo "No music is playing..."
        ;;
        Paused)
            update_hooks "$PARENT_BAR_PID" 2
            playerctl --player=$PLAYER metadata --format "$FORMAT"
        ;;
        Empty)
            echo ""
        ;;
        *)
            update_hooks "$PARENT_BAR_PID" 1
            playerctl --player=$PLAYER metadata --format "$FORMAT"
        ;;
    esac
}

case $OPT in
    --status)       echo "$STATUS"                      ;;
    --scrollable)   scroll_media_status                 ;;
    *)              handle_playerctl_status "$STATUS"   ;;
esac
